@import "../../lib/reset";
@import "../../lib/colors";
@import "../../lib/units";
@import "../../lib/fonts";


@mixin button-solid() {

    &.mmf-button {
        @include reset-button();
        @include solid-font-style();
        background-color: map-get($color-solid, 6);
        border: $mmf-input-border--width $mmf-style--border transparent;
        border-radius: $mmf-radius;
        color: map-get($color-solid, 8);
        padding: 0 $mmf-unit;

        &[disabled] {
            color: rgba(map-get($color-solid, 8), map-get($opacity, 2));
        }

        // clickable
        &.is-enabled {
            &:hover,
            &:focus {
                background-color: map-get($color-solid, 9);
                color: map-get($color-solid, 0);
            }

            &:focus {
                @include elevation(1);
            }

            // activated until deactivated via being clicked again
            &.activated {
                background-color: map-get($color-solid, 5);
                color: map-get($color-solid, 0);
            }
        }
    }

    &.mmf-button--raised {
        border: $mmf-input-border--width solid map-get($color-solid, 5);
        border-radius: $mmf-radius;
        background-color:map-get($color-solid, 5);
        color: map-get($color-solid, 0);
        
        &[disabled] {
            background-color: rgba(map-get($color-solid, 5), map-get($opacity, 2));
            border-color: rgba(map-get($color-solid, 5), map-get($opacity, 2));
            color: rgba(map-get($color-solid, 0), map-get($opacity, 2));
        }

        &.is-enabled {
            &:hover {
                border: $mmf-input-border--width $mmf-style--border map-get($color-basic, 5);
                border-radius: $mmf-radius;
                background-color:map-get($color-basic, 5);
            }

            &:focus {
                @include elevation(1);
                opacity: map-get($opacity, 0);
            }
        }
    }
}
