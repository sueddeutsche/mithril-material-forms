@import "../../lib/units";
@import "../../lib/reset";
@import "../../lib/input";
@import "../../lib/fonts";


@mixin select-solid() {
    &.mmf-select__wrapper {
        @include with-input-solid(false);
        border: none;
        padding: 0; // reset default input padding from mixin
        background-color: map-get($color-solid, 6);

        &.is-enabled {
            
            &:not([disabled]):hover {
                border-color: map-get($color-solid, 0);
            }

            &:not([disabled]).has-focus {
                border-color: map-get($color-solid, 0);
                @include elevation(1);
            }

            
        &:not([disabled]):hover,
        &:not([disabled]).has-focus {
                &:after {
                    background-color: map-get($color-solid, 5);
                    color: map-get($color-solid, 0);
                }
            }
        }

        &.is-disabled {
            color: rgba(map-get($color-solid, 7), map-get($opacity, 2));
            border-color: map-get($color-basic, 5);
        }

        &:after {
            content: "arrow_drop_down";
            font-size: 1.8em;
            color: map-get($color-basic, 0);
            margin: $mmf-unit/2 0;
        }

        .mmf-select {
            @include reset-select();
            @include solid-font-style();
            font-size: inherit;
            outline: none;
            padding: $mmf-unit 5*$mmf-unit $mmf-unit $mmf-unit;
            color: map-get($color-basic, 0);
            border: $mmf-input-border--width $mmf-style--border map-get($color-basic, 4);
            border-radius: $mmf-radius;

            &:not([disabled]):hover {
                border-color: map-get($color-solid, 0);
            }

            &[disabled] {
                opacity: map-get($opacity, 2);
            }
        }
        
        &.with-color {
            .mmf-select {
                padding: $mmf-unit 5*$mmf-unit $mmf-unit 3*$mmf-unit;
            }
        }
    }
}
